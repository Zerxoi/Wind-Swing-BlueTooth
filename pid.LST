C51 COMPILER V9.52.0.0   PID                                                               05/17/2017 21:50:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN pid.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE pid.c LARGE BROWSE INCDIR(..\Wind Swing) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "pid.h"
   2          #include "m6050.h"
   3          #include "mathmod.h"
   4          //Tip: KP,KI,KD set in "pid.h"
   5          
   6          void pid_initstruct(pid_structdef *pid_structure)
   7          {
   8   1        pid_structure->kp=0;
   9   1        pid_structure->ki=0;
  10   1        pid_structure->kd=0;
  11   1        pid_structure->x_integral=0;
  12   1        pid_structure->x_pre_error=UnableValue;
  13   1        pid_structure->x_output=0;
  14   1        pid_structure->y_integral=0;
  15   1        pid_structure->y_pre_error=UnableValue;
  16   1        pid_structure->y_output=0;
  17   1        
  18   1      }
  19          
  20          void pid_getstruct(pid_structdef *pid_structure,m6050_structdef *m6050_structure,mathmod_structdef *mathmo
             -d_structure)
  21          {
  22   1        float x_error,x_derivative;
  23   1        float y_error,y_derivative;
  24   1        x_error=mathmod_structure->angle_x-m6050_structure->angle_x;
  25   1        pid_structure->x_integral+=x_error;
  26   1        if (pid_structure->x_integral>XIntegralMax)
  27   1          pid_structure->x_integral=XIntegralMax;
  28   1        else if (pid_structure->x_integral<XIntegralMin)
  29   1          pid_structure->x_integral=XIntegralMin;
  30   1        if (pid_structure->x_pre_error==UnableValue)    //Èç¹ûx_pre_errorÈ¡µ½²»¿ÉÄÜÖµ£¬ÔòËµÃ÷ÔÝÊ±Ã»ÓÐx_pre_error£¬¼
             -´Ã»ÓÐÎ¢·ÖÏî
  31   1          x_derivative=0;
  32   1        else
  33   1          x_derivative=x_error-pid_structure->x_pre_error;
  34   1        pid_structure->x_pre_error=x_error;
  35   1        pid_structure->x_output=pid_structure->kp*x_error+pid_structure->ki*pid_structure->x_integral+pid_structu
             -re->kd*x_derivative;
  36   1        
  37   1        y_error=mathmod_structure->angle_y-m6050_structure->angle_y;
  38   1        pid_structure->y_integral+=y_error;
  39   1        if (pid_structure->y_integral>YIntegralMax)
  40   1          pid_structure->y_integral=YIntegralMax;
  41   1        else if (pid_structure->y_integral<YIntegralMin)
  42   1          pid_structure->y_integral=YIntegralMin;
  43   1        if (pid_structure->y_pre_error==UnableValue)    //Èç¹ûy_pre_errorÈ¡µ½²»¿ÉÄÜÖµ£¬ÔòËµÃ÷ÔÝÊ±Ã»ÓÐy_pre_error£¬¼
             -´Ã»ÓÐÎ¢·ÖÏî
  44   1          y_derivative=0;
  45   1        else
  46   1          y_derivative=y_error-pid_structure->y_pre_error;
  47   1        pid_structure->y_pre_error=y_error;
  48   1        pid_structure->y_output=pid_structure->kp*y_error+pid_structure->ki*pid_structure->y_integral+pid_structu
             -re->kd*y_derivative;
  49   1      }

C51 COMPILER V9.52.0.0   PID                                                               05/17/2017 21:50:29 PAGE 2   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1019    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
